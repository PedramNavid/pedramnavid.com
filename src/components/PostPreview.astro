---
import type { CollectionEntry } from 'astro:content'
import { getMonthName, calculateReadingTime } from '$/utils'
import TagBadge from './TagBadge.astro'

interface Props {
    post: CollectionEntry<'blog'>,
    asCard?: boolean
}

const { post: { data: post, slug, body }, asCard = false } = Astro.props
const readingTime = calculateReadingTime(body)
---
<article class={`post-preview group ${asCard && 'post-preview--card'}`}>
    {asCard ? (
        // Card layout
        <>
            {post.image && (
                <div class="post-preview__image">
                    <a href={`/blog/${slug}`}>
                        <img src={post.image} alt={post.title} loading="lazy" />
                    </a>
                </div>
            )}
            <div class="post-preview__content">
                <div class="post-preview__header">
                    <time class="post-preview__date">
                        { `${getMonthName(post.date)} ${new Date(post.date).getDate()}, ${new Date(post.date).getFullYear()}` }
                    </time>
                    <span class="post-preview__reading-time">{readingTime} min read</span>
                </div>
                <h3 class="post-preview__title">
                    <a href={`/blog/${slug}`} title={post.title}>{post.title}</a>
                </h3>
                <p class="post-preview__desc">
                    {post.description}
                </p>
                <div class="post-preview__tags">
                    {post.tags.slice(0, 3).map(tag => (
                        <TagBadge tag={tag} href={`/tags/${tag}`} size="sm" />
                    ))}
                </div>
            </div>
        </>
    ) : (
        // List layout - compact
        <a href={`/blog/${slug}`} class="post-preview__link">
            <time class="post-preview__date-compact">
                { `${getMonthName(post.date).slice(0, 3)} ${new Date(post.date).getDate()}, ${new Date(post.date).getFullYear()}` }
            </time>
            <div class="post-preview__content">
                <div class="post-preview__header-compact">
                    <h3 class="post-preview__title">{post.title}</h3>
                    <span class="post-preview__reading-time">{readingTime} min</span>
                </div>
                <p class="post-preview__desc">{post.description}</p>
                <div class="post-preview__tags">
                    {post.tags.slice(0, 2).map(tag => (
                        <TagBadge tag={tag} size="sm" />
                    ))}
                </div>
            </div>
        </a>
    )}
</article>
<style>
    .post-preview {
        @apply block transition-all duration-200;
    }
    .post-preview:hover .post-preview__title {
        @apply text-blue-600 dark:text-blue-400;
    }
    .post-preview--card {
        @apply bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-100 dark:border-gray-800 hover:shadow-xl hover:border-gray-200 dark:hover:border-gray-700 transition-all duration-300 hover:-translate-y-1;
    }
    .post-preview__image {
        @apply relative bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 overflow-hidden;
        padding-bottom: 56.25%; /* 16:9 aspect ratio */
    }
    .post-preview__image img {
        @apply absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-300;
    }
    .post-preview__content {
        @apply p-6;
    }
    .post-preview__title {
        @apply text-lg md:text-xl font-semibold text-gray-900 dark:text-gray-100 mb-3 leading-tight;
    }
    .post-preview__title a {
        @apply transition-colors duration-200;
    }
    .post-preview__desc {
        @apply text-gray-600 dark:text-gray-400 line-clamp-2 mb-4 leading-relaxed;
    }
    .post-preview__meta {
        @apply flex items-center gap-4;
    }
    .post-preview__date {
        @apply text-sm text-gray-500 dark:text-gray-500 font-medium;
    }
    .post-preview__header {
        @apply mb-2 flex items-center justify-between;
    }
    .post-preview__header-compact {
        @apply flex items-center justify-between mb-1;
    }
    .post-preview__reading-time {
        @apply text-xs text-gray-500 dark:text-gray-500 font-medium;
    }
    .post-preview__tags {
        @apply flex flex-wrap gap-2 mt-3;
    }
    .post-preview__read-more {
        @apply inline-flex items-center text-blue-600 dark:text-blue-400 font-medium text-sm mt-4 hover:underline;
    }
    /* Non-card specific styles - Compact list view */
    .post-preview:not(.post-preview--card) {
        @apply py-1;
    }
    .post-preview:not(.post-preview--card) .post-preview__content {
        @apply p-0;
    }
    .post-preview:not(.post-preview--card) .post-preview__title {
        @apply text-lg md:text-xl mb-2;
    }
    .post-preview:not(.post-preview--card) .post-preview__desc {
        @apply text-base text-gray-600 dark:text-gray-400 line-clamp-1;
    }
    .post-preview:not(.post-preview--card) .post-preview__header {
        @apply mb-1;
    }
    .post-preview:not(.post-preview--card) .post-preview__date {
        @apply text-sm text-gray-500 dark:text-gray-500;
    }
    .post-preview:not(.post-preview--card) .post-preview__read-more {
        @apply hidden;
    }
    
    /* Compact list layout */
    .post-preview__link {
        @apply flex gap-6 items-start hover:bg-gray-50 dark:hover:bg-gray-800/50 -mx-4 px-4 py-2 rounded-lg transition-colors text-inherit no-underline;
    }
    .post-preview__date-compact {
        @apply text-sm text-gray-500 dark:text-gray-500 font-mono whitespace-nowrap pt-0.5 w-32 flex-shrink-0;
    }
    .post-preview:not(.post-preview--card) .post-preview__content {
        @apply flex-1;
    }
</style>
