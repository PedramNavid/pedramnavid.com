---
import type { CollectionEntry } from 'astro:content'
import { getMonthName, calculateReadingTime } from '$/utils'
import TagBadge from './TagBadge.astro'

interface Props {
    post: CollectionEntry<'blog'>,
    asCard?: boolean
}

const { post: { data: post, slug, body }, asCard = false } = Astro.props
const readingTime = calculateReadingTime(body)
---
<article class={`post-preview group ${asCard && 'post-preview--card'}`}>
    {asCard ? (
        // Card layout
        <>
            {post.image && (
                <div class="post-preview__image">
                    <a href={`/blog/${slug}`}>
                        <img src={post.image} alt={post.title} loading="lazy" />
                    </a>
                </div>
            )}
            <div class="post-preview__content">
                <div class="post-preview__header">
                    <time class="post-preview__date">
                        { `${getMonthName(post.date)} ${new Date(post.date).getDate()}, ${new Date(post.date).getFullYear()}` }
                    </time>
                    <span class="post-preview__reading-time">{readingTime} min read</span>
                </div>
                <h3 class="post-preview__title">
                    <a href={`/blog/${slug}`} title={post.title}>{post.title}</a>
                </h3>
                <p class="post-preview__desc">
                    {post.description}
                </p>
                <div class="post-preview__tags">
                    {post.tags.slice(0, 3).map(tag => (
                        <TagBadge tag={tag} href={`/tags/${tag}`} size="sm" />
                    ))}
                </div>
            </div>
        </>
    ) : (
        // List layout - compact
        <a href={`/blog/${slug}`} class="post-preview__link">
            <time class="post-preview__date-compact">
                { `${getMonthName(post.date).slice(0, 3)} ${new Date(post.date).getDate()}, ${new Date(post.date).getFullYear()}` }
            </time>
            <div class="post-preview__content">
                <div class="post-preview__header-compact">
                    <h3 class="post-preview__title">{post.title}</h3>
                    <span class="post-preview__reading-time">{readingTime} min</span>
                </div>
                <p class="post-preview__desc">{post.description}</p>
                <div class="post-preview__tags">
                    {post.tags.slice(0, 2).map(tag => (
                        <TagBadge tag={tag} size="sm" />
                    ))}
                </div>
            </div>
        </a>
    )}
</article>
<style>
    .post-preview {
        @apply block transition-all duration-100;
    }
    .post-preview:hover .post-preview__title {
        @apply text-orange-600 dark:text-amber-400;
    }
    .post-preview--card {
        @apply bg-amber-50/90 dark:bg-stone-900/90 overflow-hidden border-2 border-stone-800 dark:border-emerald-800/50;
        box-shadow: 4px 4px 0 rgba(120, 53, 15, 0.3);
        position: relative;
        transition: all 0.1s steps(3);
    }
    .dark .post-preview--card {
        box-shadow: 4px 4px 0 rgba(16, 185, 129, 0.2);
    }
    .post-preview--card:hover {
        transform: translate(-2px, -2px);
        box-shadow: 6px 6px 0 rgba(120, 53, 15, 0.4);
    }
    .dark .post-preview--card:hover {
        box-shadow: 6px 6px 0 rgba(16, 185, 129, 0.3);
    }
    .post-preview__image {
        @apply relative bg-gradient-to-br from-stone-200 to-amber-200 dark:from-stone-800 dark:to-stone-700 overflow-hidden;
        padding-bottom: 56.25%; /* 16:9 aspect ratio */
        image-rendering: pixelated;
    }
    .post-preview__image img {
        @apply absolute inset-0 w-full h-full object-cover;
        image-rendering: pixelated;
        filter: contrast(1.1) saturate(0.9);
        transition: transform 0.1s steps(2);
    }
    .post-preview:hover .post-preview__image img {
        transform: scale(1.05);
    }
    .post-preview__content {
        @apply p-6;
    }
    .post-preview__title {
        @apply text-base md:text-lg font-bold text-stone-900 dark:text-emerald-300 mb-3 leading-tight;
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
    }
    .post-preview__title a {
        @apply transition-colors duration-100;
    }
    .post-preview__desc {
        @apply text-stone-700 dark:text-emerald-200 line-clamp-2 mb-4 leading-relaxed;
        font-family: 'IBM Plex Mono', monospace;
    }
    .post-preview__meta {
        @apply flex items-center gap-4;
    }
    .post-preview__date {
        @apply text-xs text-stone-600 dark:text-emerald-600;
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        font-size: 0.875rem;
    }
    .post-preview__header {
        @apply mb-2 flex items-center justify-between;
    }
    .post-preview__header-compact {
        @apply flex items-center justify-between mb-1;
    }
    .post-preview__reading-time {
        @apply text-xs text-orange-600 dark:text-amber-500;
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        font-size: 0.75rem;
    }
    .post-preview__reading-time::before {
        content: '⏱ ';
    }
    .post-preview__tags {
        @apply flex flex-wrap gap-2 mt-3;
    }
    .post-preview__read-more {
        @apply inline-flex items-center text-blue-600 dark:text-blue-400 font-medium text-sm mt-4 hover:underline;
    }
    /* Non-card specific styles - Compact list view */
    .post-preview:not(.post-preview--card) {
        @apply py-3 relative;
    }
    .post-preview:not(.post-preview--card)::before {
        content: '▶';
        @apply absolute left-0 top-4 text-orange-600 dark:text-emerald-500 opacity-0 transition-opacity;
    }
    .post-preview:not(.post-preview--card):hover::before {
        @apply opacity-100;
    }
    .post-preview:not(.post-preview--card) .post-preview__content {
        @apply p-0;
    }
    .post-preview:not(.post-preview--card) .post-preview__title {
        @apply text-lg md:text-xl mb-2;
    }
    .post-preview:not(.post-preview--card) .post-preview__desc {
        @apply text-base text-gray-600 dark:text-gray-400 line-clamp-1;
    }
    .post-preview:not(.post-preview--card) .post-preview__header {
        @apply mb-2;
    }
    .post-preview:not(.post-preview--card) .post-preview__date {
        @apply text-sm text-gray-500 dark:text-gray-500;
    }
    .post-preview:not(.post-preview--card) .post-preview__read-more {
        @apply hidden;
    }
    
    /* Compact list layout */
    .post-preview__link {
        @apply flex gap-8 items-start hover:bg-amber-100/50 dark:hover:bg-stone-900/50 -mx-4 px-4 py-2 transition-all duration-100 text-inherit no-underline;
        border: 2px solid transparent;
    }
    .post-preview__link:hover {
        @apply border-orange-600/30 dark:border-emerald-600/30;
        transform: translateX(4px);
    }
    .post-preview__date-compact {
        @apply text-xs text-stone-600 dark:text-emerald-600 whitespace-nowrap pt-0.5 w-36 flex-shrink-0;
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        font-size: 0.875rem;
    }
    .post-preview__date-compact::before {
        content: '[';
        @apply text-orange-600 dark:text-emerald-500;
    }
    .post-preview__date-compact::after {
        content: ']';
        @apply text-orange-600 dark:text-emerald-500;
    }
    .post-preview:not(.post-preview--card) .post-preview__content {
        @apply flex-1;
    }
</style>
